AC_INIT(mbuffer.c)
AC_CONFIG_HEADER(config.h)

AC_CANONICAL_SYSTEM

AC_PREFIX_DEFAULT(/usr/local)
test "$prefix" = NONE && prefix=/usr/local
test "$exec_prefix" = NONE && exec_prefix=$prefix

PACKAGE=mbuffer

VERSION=20010507
AC_DEFINE_UNQUOTED(VERSION,"${VERSION}")
AC_SUBST(VERSION)

AC_DEFINE(_REENTRANT,1,Needed for thread safe compilation)

AC_LANG_C
AC_PROG_CC
AC_PROG_INSTALL

AC_PATH_PROG(RM,rm)
AC_PATH_PROG(STRIP,strip)

AC_CHECK_LIB(pthread,pthread_attr_init,,AC_MSG_ERROR(you need the pthread library!))
AC_SEARCH_LIBS(sem_init,rt,,AC_MSG_ERROR(could not find semaphore functions!))

if test -n "$GCC"; then
        CFLAGS="$CFLAGS -Wall"
        CXXFLAGS="$CXXFLAGS -Wall"
        case "$target_cpu" in
                i386*)
                CFLAGS="$CFLAGS -m386"
                CXXFLAGS="$CXXFLAGS -m386"
                ;;
                i486*)
                CFLAGS="$CFLAGS -m486"
                CXXFLAGS="$CXXFLAGS -m486"
                ;;
                i586*)
                CFLAGS="$CFLAGS -mpentium"
                CXXFLAGS="$CXXFLAGS -mpentium"
                ;;
                i686*)
                CFLAGS="$CFLAGS -mpentiumpro"
                CXXFLAGS="$CXXFLAGS -mpentiumpro"
                ;;
        esac
fi

AC_TYPE_SIGNAL
AC_FUNC_MMAP
AC_HEADER_TIME
AC_HEADER_STDC
AC_CHECK_FUNCS(strerror memcpy)
AC_CHECK_HEADERS(unistd.h memory.h)
AC_STRUCT_ST_BLKSIZE

AC_ARG_ENABLE(debug,
        --enable-debug            enable verbose logging to console for debugging purpose,
        AC_DEFINE_UNQUOTED(DEBUG),
	AC_DEFINE_UNQUOTED(NDEBUG)
        )
AC_SUBST(DEBUG)
AC_SUBST(NDEBUG)

AC_ARG_ENABLE(experimental,
        --enable-experimental     enable experimental code,
        AC_DEFINE_UNQUOTED(EXPERIMENTAL),
        )
AC_SUBST(EXPERIMENTAL)


AC_OUTPUT(Makefile)
